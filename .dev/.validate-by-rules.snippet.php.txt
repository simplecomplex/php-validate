<?php

require 'vendor/autoload.php';


use \SimpleComplex\Validate\Validate;


/** */
class Bicycle
{
    public $wheels = 0;
    public $saddle;
    public $sound = '';
    public $accessories = [];
    public $various;
    public function __construct($wheels, $saddle, $sound, $accessories, $various = [])
    {
        $this->wheels = $wheels;
        $this->saddle = $saddle;
        $this->sound = $sound;
        $this->accessories = $accessories;
        if ($various) {
            $this->various = $various;
        }
    }
}

$rules = [
    'class' => [
        'Bicycle'
    ],
    'tableElements' => [
        'wheels' => [
            'integer',
            'range' => [
                1,
                3
            ]
        ],
        'saddle' => [
            'integer',
            'alternativeEnum' => [
                true,
            ]
        ],
        'sound' => [
            'string' => true,
            'enum' => [
                [
                    'silent',
                    'swooshy',
                    'clattering',
                ]
            ]
        ],
        'accessories' => [
            'array',
            'tableElements' => [
                'luggageCarrier' => [
                    'boolean',
                    'optional'
                ],
                'lights' => [
                    'numeric',
                    'optional'
                ]
            ]
        ],
        'various' => [
            'array',
            'optional',
            'alternativeEnum' => [
                null,
            ],
            'listItemPrototype' => [
                'string',
                'alternativeEnum' => [
                    true,
                    false,
                    null,
                ]
            ]
        ]
    ]
];

$bike = new Bicycle(
    2,
    true,
    'swooshy',
    [
        'luggageCarrier' => false,
    ]
);

$validate = Validate::getInstance();
echo 'Valid: ' . ((int) $validate->challenge($bike, $rules)) . "\n";

$recording = $validate->challengeRecording($bike, $rules);
if (empty($recording['passed'])) {
    echo "Failed:\n" . join("\n", $recording['record']) . "\n";
}
else {
    echo "Passed.\n";
}

echo "\n";

$bike = new Bicycle(
    2,
    true,
    'swooshy',
    [
        'luggageCarrier' => false,
    ],
    [
        null,
        true,
        'paint',
        13,
        'rubbish'
    ]
);

$validate = Validate::getInstance();
echo 'Valid: ' . ((int) $validate->challenge($bike, $rules)) . "\n";

$recording = $validate->challengeRecording($bike, $rules);
if (empty($recording['passed'])) {
    echo "Failed:\n" . join("\n", $recording['record']) . "\n";
}
else {
    echo "Passed.\n";
}
